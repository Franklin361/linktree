import { CardAppliedForJob, CustomAlert, CustomLoading, MainLayout } from '../components';
import withAuth from '../components/withAuth';
import { useQuery } from '@apollo/client';
import { JobState } from '../interfaces';
import { useAppDispatch, useAppSelector } from '../hooks';
import { useEffect } from 'react';
import { listJobs } from '../redux';
import { useUserId } from '@nhost/react';
import { GET_JOBS_APPLIES_BY_USER } from '../graphql';
import { Grid } from '@nextui-org/react';

const AppliesPage = () => {

    return (
        <MainLayout title='LinkTree | My applies'>
            <MyApplies />
        </MainLayout>
    )
}
export default withAuth(AppliesPage)

// Generated by https://quicktype.io



export const MyApplies = () => {
    // TODO: refactor, this logic's component looks like the same in the page/index
    const id = useUserId();
    const { data, loading, error } = useQuery<{ post_user: { post: JobState[] }[] }>(GET_JOBS_APPLIES_BY_USER, { variables: { id } })
    const dispatch = useAppDispatch()
    const { myApplies } = useAppSelector(state => state.job)

    useEffect(() => {
        if (data?.post_user && !myApplies) {
            dispatch(listJobs({
                input: 'myApplies',
                jobs: data.post_user.map(data => { return data.post[0] })
            }))
        }
    }, [data])

    console.log({ myApplies })
    if (loading || !myApplies) return <CustomLoading msg='Loading your applies for jobs' />

    if (error && !data?.post_user) return <CustomAlert msg={error.message} />

    return (
        <Grid.Container gap={5}>
            {
                myApplies.map(job => (
                    <Grid key={job.id}>
                        <CardAppliedForJob {...job} />
                    </Grid>
                ))
            }
        </Grid.Container>
    )
}